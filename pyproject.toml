[build-system]
requires = [ 'setuptools >= 61.0' ]
build-backend = 'setuptools.build_meta'

[project]
name = 'bsmu.vision'
dynamic = [ 'version' ]
description = 'Base data processing application for extension by plugins'
readme = 'README.md'
requires-python = '>= 3.10'
license = { file = 'LICENSE' }
authors = [
    { name = 'Ivan Kosik', email = 'ivankosik91@gmail.com' },
]
keywords = [
    'plugin-system',
    'image-processing',
    'annotation',
    'masking',
    'medical-imaging',
    'image-analysis',
    'computer-vision',
]
classifiers = [
    'Development Status :: 3 - Alpha',
    'Intended Audience :: Science/Research',
    'License :: OSI Approved :: BSD License',
    'Programming Language :: Python :: 3',
    'Programming Language :: Python :: 3.10',
    'Programming Language :: Python :: 3.11',
    'Operating System :: OS Independent',
    'Topic :: Software Development :: Version Control :: Git',
]
dependencies = [
    'PySide6>=6.5',
    'ruamel.yaml>=0.17',
]

[project.urls]
Homepage = 'https://github.com/BSMU-ITLab/vision'
Repository = 'https://github.com/BSMU-ITLab/vision.git'
Issues = 'https://github.com/BSMU-ITLab/vision/issues'

[project.scripts]
bsmu-vision-c = 'bsmu.vision.app.main:run_app'

[project.gui-scripts]
bsmu-vision = 'bsmu.vision.app.main:run_app'

[project.optional-dependencies]
common = [
    'numpy',
    'opencv-python',
    'scikit-image',
    'scipy',
    'sortedcontainers',
]
nn_inference = [ 'onnxruntime-gpu' ]
data_analysis = [ 'pandas' ]

# Dependencies for handling various medical imaging formats
nifti = [ 'nibabel' ]
dicom = [ 'pydicom' ]
wsi = [
    'slideio',
    'tifffile',
]

test = [ 'pytest' ]
build = [ 'cx-Freeze' ]

[tool.setuptools.dynamic]
version = { attr = 'bsmu.vision.app.__version__' }

[tool.setuptools.packages.find]
where = [ 'src' ]

[tool.setuptools.package-data]
'*' = [ '*.conf.yaml' ]
